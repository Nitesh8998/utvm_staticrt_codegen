name: Run code quality checks

on:
  pull_request:
    branches:
      - feature-dbgalloc
  push:
    branches:
      - feature-dbgalloc

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  git_check:
    name: Run Git Check
    runs-on: ubuntu-latest
    steps:
      - name: Requirements
        shell: bash
        run: |
          sudo apt-get install git
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Check and Print Warning
        run: |
          if [[ -n $(git diff --check HEAD^) ]]; then
            echo "You must remove whitespace before submitting a pull request"
            echo ""
            git diff --check HEAD^
            exit -1
          fi
  astyle_format:
    name: Run AStyle Format
    runs-on: ubuntu-latest
    steps:
      - name: Requirements
        shell: bash
        run: |
          sudo apt-get install git build-essential cmake
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clone TVM
        shell: bash
        run: |
          git clone --recursive https://github.com/apache/tvm.git ../tvm
      - name: Configure CMake
        run: mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_ASTYLE=ON ..
      - name: Build with CMake
        run: cd build && make
      - name: Run Checks
        run: cd build && make format
      - name: Print Warnings
        run: |
          if [[ -n $(git diff) ]]; then
            echo "You must run make format before submitting a pull request"
            echo ""
            git diff
            exit -1
          fi
  clang_tidy:
    name: Run Clang Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Requirements
        shell: bash
        run: |
          sudo apt-get install git build-essential cmake
          sudo apt-get install -y clang clang-tidy
          wget https://raw.githubusercontent.com/llvm-mirror/clang-tools-extra/master/clang-tidy/tool/run-clang-tidy.py -O /usr/share/clang/run-clang-tidy.py
          chmod +x /usr/share/clang/run-clang-tidy.py
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clone TVM
        shell: bash
        run: |
          git clone --recursive https://github.com/apache/tvm.git ../tvm
      - name: Configure CMake
        run: mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_CLANG_TIDY=ON ..
      - name: Build with CMake
        run: cd  build && make
      - name: Run Checks
        run: cd build && make tidy > output.txt
      - name: Print Warnings
        run: |
          if [[ -n $(grep "error: " build/output.txt) ]]; then
            echo "You must pass the clang tidy checks before submitting a pull request"
            echo "cmake -DENABLE_CLANG_TIDY=ON .. & make tidy"
            echo ""
            grep --color -E '^|error: ' build/output.txt
            exit -1
          elif [[ -n $(grep "warning: " build/output.txt) ]]; then
            echo "Warnings:"
            grep --color -E '^|warning: ' build/output.txt
            echo -e "\033[1;32m\xE2\x9C\x93 passed - with warnings\033[0m $1"
            exit 0
          else
            echo -e "\033[1;32m\xE2\x9C\x93 passed - no warnings\033[0m $1"
            exit 0
          fi
  cppcheck:
    name: Run CPPCheck
    runs-on: ubuntu-latest
    steps:
      - name: Requirements
        shell: bash
        run: |
          sudo apt-get install git build-essential cmake
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Clone TVM
        shell: bash
        run: |
          git clone --recursive https://github.com/apache/tvm.git ../tvm
      - name: Configure CMake
        run: mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_CPPCHECK=ON ..
      - name: Build with CMake
        run: cd build && make
      - name: Run Checks
        run: cd build && make check
  cmake_lint:
    name: Run CMake Linter
    runs-on: ubuntu-latest
    steps:
      - name: Requirements
        shell: bash
        run: |
          sudo apt-get install git build-essential cmake python3-dev
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Latest CMake Linter via PIP
        run: pip3 install cmakelint
      - name: Run Checks
        run: |
          CMAKE_FILES=$(find . \( -iname "*.cmake" -o -name "CMakeLists.txt" \) | grep -v "/build/")
          cmakelint --quiet --linelength=120 $CMAKE_FILES


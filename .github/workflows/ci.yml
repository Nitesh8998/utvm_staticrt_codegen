name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        config:
          - {name: "Linux", os: ubuntu-latest, cmake-generator: ""}
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}

    steps:
    - uses: actions/checkout@v2
    - name: Requirements
      shell: bash
      run: |
        sudo apt-get install python3 python3-dev python3-setuptools gcc libtinfo-dev zlib1g-dev build-essential cmake libedit-dev libxml2-dev gcc-arm-none-eabi
        sudo pip3 install --upgrade numpy decorator attrs psutil scipy pytest tflite
        cd ..
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.1.0/clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
        tar xf clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
        mv clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04 llvm
        git clone --recursive https://github.com/apache/tvm.git
        cd tvm
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git am ../utvm_staticrt_codegen/tvm_patches/*.patch
        mkdir build
        cp cmake/config.cmake build
        cd build
        sed -i -- "s/USE_LLVM OFF/USE_LLVM ..\\/..\\/llvm\\/bin\\/llvm-config/g" config.cmake
        cmake ..
        cmake --build .
        cd ..

    - name: Build
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .

    - name: Test
      shell: bash
      run: |
        export PYTHONPATH=$(pwd)/../tvm/python:${PYTHONPATH}
        cd examples
        ./run_flow.sh
